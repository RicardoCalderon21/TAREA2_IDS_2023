#!/usr/bin/env node

// process.stdout.on('error', function( err ) {
//   if (err.code == "EPIPE") {
//       process.exit(0);
//   }
// });

// random data
const arr = [ 328, 607, 228, 993, 784, 742, 912, 581, 680, 493, 409, 538, 199, 374, 845, 736, 678, 949, 236, 100, 217, 503, 718, 699, 605, 245, 256, 255, 850, 614, 399, 260, 624, 269, 643, 1000, 317, 823, 833, 987, 752, 948, 762, 889, 49, 341, 899, 294, 300, 36, 354, 396, 356, 846, 561, 66, 424, 306, 898, 141, 56, 995, 756, 30, 956, 501, 805, 11, 362, 632, 387, 201, 606, 583, 48, 454, 676, 159, 957, 167, 473, 169, 41, 815, 870, 881, 155, 62, 288, 512, 576, 476, 266, 292, 43, 435, 985, 572, 92, 571, 631, 935, 51, 71, 5, 582, 389, 426, 982, 748, 508, 32, 231, 478, 432, 434, 801, 587, 598, 247, 567, 108, 955, 910, 97, 209, 963, 980, 458, 505, 475, 688, 939, 489, 436, 359, 336, 12, 122, 518, 179, 414, 219, 813, 287, 16, 865, 868, 456, 940, 580, 597, 164, 706, 929, 213, 502, 40, 901, 261, 147, 681, 195, 358, 601, 698, 125, 431, 701, 562, 127, 28, 782, 914, 753, 144, 547, 542, 930, 852, 863, 684, 529, 842, 253, 142, 211, 371, 453, 770, 618, 189, 193, 309, 875, 329, 628, 934, 636, 787, 119, 942, 660, 88, 690, 751, 943, 438, 487, 650, 495, 368, 102, 818, 248, 928, 494, 263, 469, 768, 900, 55, 319, 24, 992, 31, 967, 333, 694, 729, 544, 466, 19, 981, 972, 725, 22, 338, 29, 106, 506, 274, 858, 455, 296, 182, 459, 93, 366, 651, 252, 953, 419, 138, 589, 713, 57, 559, 406, 205, 433, 749, 739, 825, 98, 692, 827, 298, 383, 172, 378, 534, 308, 867, 744, 920, 661, 767, 546, 809, 265, 772, 444, 403, 271, 186, 590, 188, 740, 761, 593, 769, 89, 73, 398, 275, 326, 318, 323, 620, 799, 788, 697, 413, 251, 244, 728, 171, 975, 10, 926, 39, 803, 457, 666, 586, 988, 945, 23, 682, 535, 849, 428, 919, 9, 320, 153, 969, 603, 87, 137, 111, 410, 882, 573, 866, 516, 711, 722, 776, 908, 82, 499, 677, 303, 778, 390, 716, 734, 599, 989, 136, 667, 686, 162, 112, 357, 246, 470, 951, 675, 615, 115, 991, 741, 527, 418, 377, 34, 467, 637, 272, 754, 758, 350, 602, 786, 937, 623, 160, 746, 641, 78, 959, 733, 299, 974, 814, 712, 689, 662, 131, 759, 180, 124, 973, 856, 526, 18, 999, 483, 83, 848, 612, 384, 321, 950, 507, 207, 646, 225, 685, 528, 638, 348, 35, 965, 847, 577, 886, 282, 400, 922, 222, 176, 183, 543, 673, 704, 888, 355, 970, 68, 839, 404, 492, 695, 781, 415, 128, 90, 997, 777, 286, 983, 921, 648, 484, 857, 465, 375, 175, 170, 794, 109, 575, 322, 513, 720, 550, 53, 166, 206, 386, 639, 46, 994, 655, 420, 472, 859, 817, 873, 381, 33, 200, 978, 630, 832, 610, 344, 405, 276, 278, 709, 17, 796, 216, 629, 422, 844, 397, 553, 683, 608, 862, 214, 679, 168, 530, 668, 986, 447, 270, 334, 659, 411, 402, 417, 880, 509, 401, 3, 118, 190, 161, 913, 621, 840, 812, 594, 843, 789, 335, 984, 77, 394, 460, 822, 223, 485, 674, 891, 234, 2, 557, 373, 20, 67, 962, 486, 766, 148, 644, 715, 936, 821, 65, 656, 838, 284, 998, 363, 281, 452, 714, 906, 521, 539, 154, 642, 871, 337, 591, 755, 15, 173, 107, 826, 780, 227, 902, 670, 385, 532, 184, 187, 197, 554, 851, 340, 938, 194, 262, 727, 230, 91, 885, 327, 421, 604, 123, 904, 439, 820, 836, 723, 191, 134, 412, 548, 129, 917, 240, 64, 804, 925, 75, 923, 773, 702, 226, 765, 490, 563, 391, 388, 479, 81, 349, 510, 717, 693, 968, 343, 218, 665, 47, 69, 890, 243, 869, 810, 966, 703, 304, 570, 540, 743, 947, 61, 653, 481, 63, 302, 70, 316, 634, 909, 305, 525, 613, 177, 149, 806, 291, 468, 117, 289, 135, 346, 853, 393, 878, 367, 555, 427, 536, 26, 671, 595, 609, 105, 441, 757, 500, 196, 731, 592, 220, 808, 463, 6, 879, 449, 311, 732, 229, 514, 345, 365, 560, 979, 645, 27, 38, 37, 831, 101, 622, 837, 584, 611, 877, 824, 150, 42, 903, 215, 750, 793, 887, 360, 537, 533, 297, 103, 511, 797, 893, 764, 151, 126, 158, 325, 996, 876, 372, 477, 330, 224, 310, 897, 946, 574, 448, 864, 280, 198, 626, 774, 735, 257, 80, 114, 379, 791, 429, 829, 523, 798, 941, 745, 443, 380, 883, 221, 654, 976, 301, 239, 370, 241, 541, 242, 579, 775, 238, 72, 208, 315, 293, 44, 520, 569, 232, 352, 96, 50, 202, 960, 811, 517, 165, 802, 616, 785, 549, 445, 894, 958, 273, 854, 264, 552, 747, 395, 181, 104, 790, 174, 691, 524, 8, 619, 652, 446, 488, 800, 795, 807, 496, 627, 915, 203, 351, 640, 905, 816, 295, 277, 625, 285, 99, 669, 819, 884, 783, 120, 45, 143, 964, 828, 116, 918, 25, 916, 687, 830, 474, 450, 59, 933, 565, 113, 977, 1, 491, 482, 85, 585, 210, 480, 872, 710, 892, 932, 212, 952, 707, 369, 700, 461, 140, 314, 971, 730, 658, 578, 522, 425, 258, 331, 157, 617, 250, 556, 721, 156, 185, 861, 21, 382, 440, 497, 324, 635, 13, 204, 347, 504, 451, 283, 416, 708, 364, 339, 927, 237, 437, 600, 430, 874, 407, 233, 408, 519, 545, 895, 4, 657, 58, 664, 498, 633, 696, 841, 907, 896, 705, 568, 990, 376, 130, 763, 792, 7, 464, 588, 361, 471, 52, 855, 249, 163, 954, 84, 462, 313, 760, 267, 649, 192, 290, 931, 86, 566, 259, 558, 647, 312, 254, 76, 235, 834, 564, 961, 152, 79, 911, 342, 719, 551, 663, 726, 353, 737, 531, 146, 14, 738, 771, 121, 279, 110, 515, 392, 724, 145, 672, 178, 442, 779, 132, 54, 307, 924, 944, 74, 596, 423, 835, 139, 332, 133, 94, 860, 268, 60, 95]

process.stdout.write('[ ')
arr.forEach((n) => process.stdout.write(n.toString() + ' '))
console.log(']')

async function sleep(ms) {
  return new Promise((resolve, _reject) => {
    setTimeout(resolve, ms)
  })
}

!async function() {
  for (let i = 0; i < arr.length - 1; i++) {
    for (let j = 0; j < arr.length - i - 1; j++) {
      const left  = arr.at(j);
      const right = arr.at(j + 1);
      if (left > right) {
        console.log(`swap ${j} ${j + 1}`)
        arr[j]     = right;
        arr[j + 1] = left;
      }
      // await sleep(1);
    }
  }
}()
